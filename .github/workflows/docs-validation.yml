name: Documentation Validation

on:
  push:
    branches: [ main, master ]
    paths:
      - 'docs/**'
      - 'README.md'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'docs/**'
      - 'README.md'
  workflow_dispatch:

jobs:
  validate-docs:
    name: Validate Documentation
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          
      - name: Install UV
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
          
      - name: Validate Mermaid Diagrams
        run: |
          echo "Validating Mermaid diagrams in documentation..."
          # Check if Mermaid diagrams are properly formatted
          if grep -q '```mermaid' README.md; then
            echo "Found Mermaid diagrams in README.md"
            grep -n '```mermaid' README.md
          else
            echo "No Mermaid diagrams found in README.md"
          fi
          
          # Check docs folder for Mermaid diagrams
          if [ -d "docs" ]; then
            if find docs -name "*.md" -exec grep -l '```mermaid' {} \; 2>/dev/null; then
              echo "Found Mermaid diagrams in docs folder"
              find docs -name "*.md" -exec grep -n '```mermaid' {} \;
            else
              echo "No Mermaid diagrams found in docs folder"
            fi
          fi
          
      - name: Check Documentation Structure
        run: |
          echo "Checking documentation structure..."
          ls -la docs/
          
          # Validate that all referenced docs exist
          if grep -q "docs/.*\.md" README.md; then
            for doc in $(grep -o "docs/[^)]*\.md" README.md); do
              if [ -f "$doc" ]; then
                echo "✅ $doc exists"
              else
                echo "❌ $doc missing"
                exit 1
              fi
            done
          else
            echo "No documentation references found"
          fi
          
      - name: Validate Table of Contents
        run: |
          echo "Validating table of contents links..."
          # Check if all TOC links are valid
          if grep -q '\[.*\](#[^)]*)' README.md; then
            grep -o '\[.*\](#[^)]*)' README.md | while read -r link; do
              anchor=$(echo "$link" | sed 's/.*(#\([^)]*\)).*/\1/')
              if grep -q "^## $anchor" README.md || grep -q "^### $anchor" README.md; then
                echo "✅ Link $link is valid"
              else
                echo "❌ Link $link is broken"
              fi
            done
          else
            echo "No table of contents links found"
          fi
          
      - name: Check for TODO/FIXME comments
        run: |
          echo "Checking for TODO/FIXME comments in documentation..."
          if [ -d "docs" ] && [ -f "README.md" ]; then
            if grep -r "TODO\|FIXME" docs/ README.md 2>/dev/null; then
              echo "⚠️ Found TODO/FIXME comments in documentation"
            else
              echo "✅ No TODO/FIXME comments found"
            fi
          else
            echo "⚠️ Documentation files not found"
          fi
